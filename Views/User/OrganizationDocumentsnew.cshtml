@model WebApplication1.Models.OrganizationDocument

@{
    ViewBag.Title = Model.OrgName + " - " + Resources.Resource.CompanyDocuments;// "Company Documents";//وثائق الشركة
    Layout = "~/Views/Shared/_LayoutPageFinal.cshtml";
}

<style>
    .form-group {
        margin-bottom: 3px;
    }

    table.dataTable tbody th, table.dataTable tbody td {
        padding: 1px 3px;
    }

    table.dataTable thead th, table.dataTable thead td {
        padding: 3px 3px;
    }
</style>

@using (Html.BeginForm("OrganizationDocuments", "User", FormMethod.Post))
{
    Html.AntiForgeryToken();
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="well form-horizontal" dir="@Resources.Resource.dir">

        @*<div class="row">
                <div class="col-lg-12 text-center text-success" style="font-size: 22px;">
                    <strong>  @Model.OrgName</strong>
                </div>
            </div>*@
        <div class="row">
            <div class="col-lg-12 text-center " style="font-size: 18px;">
                <strong>  @Resources.Resource.ImporterDetails </strong>
            </div>
        </div>
        <p class="redColor text-center"> @Resources.Resource.mandatoryFieldsMsg </p>
        <fieldset>

            <div class="form-group">
                <label class="col-md-3 control-label">@Resources.Resource.Importer_Licensetype</label>
                <div class="col-md-6 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                        @Html.DropDownListFor(m => m.LicenseType,Model.LicenceTypeList, new
                   {
                       @id = "ImpLicType",
                       @class = "selectpicker form-control   "
                   })
                    </div>
                    @Html.ValidationMessage("", new { @id = "LicenseTypeErr", @class = "text-danger inlineBlock marginRightLeft10PX field-validation-error" })

                </div>
            </div>

            <div class="form-group">
                <label class="col-md-3 control-label">@Resources.Resource.licenceNo</label>
                <div class="col-md-6 inputGroupContainer ImpLicNumber ">
                    <div class="input-group">
                        <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                        @Html.EditorFor(model => model.LicenseNumber, new { htmlAttributes = new { @placeholder = "* " + Resources.Resource.licenceNo,
                       @class = "form-control textval numericOnly",
                       @maxlength = "5",
                       @ondrop = "return false;",
                       @onpaste = "return false;", @id = "LicenseNumber" } })
                    </div>
                    @Html.ValidationMessage("", new { @id = "LicenseNumberErrmsg", @class = "text-danger inlineBlock marginRightLeft10PX field-validation-error" })
                </div>
                <div class="col-md-3 inputGroupContainer ImpLicYearHide ImpLicYear">
                    <div class="input-group">
                        <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                        @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @placeholder = "* " + Resources.Resource.Year,
                       @class = "form-control textval numericOnly",
                       @maxlength = "4",
                       @ondrop = "return false;",
                       @onpaste = "return false;", @id = "Year"
                   } })
                    </div>
                    @Html.ValidationMessage("", new { @id = "YearErrmsg", @class = "text-danger inlineBlock marginRightLeft10PX field-validation-error" })
                </div>
            </div>

            @*<div class="form-group">
            <label class="col-md-2 control-label">@Resources.Resource.licenceNo</label>
            <div class="col-md-4 inputGroupContainer ImpLicNumber ">
                <div class="input-group">
                    <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                    @Html.EditorFor(model => model.LicenseNumber, new { htmlAttributes = new { @placeholder = "* " + Resources.Resource.licenceNo,
                   @class = "form-control textval numericOnly",
                   @maxlength = "5",
                   @ondrop = "return false;",
                   @onpaste = "return false;", @id = "LicenseNumber" } })
                </div>
                @Html.ValidationMessage("", new { @id = "LicenseNumberErrmsg", @class = "text-danger inlineBlock marginRightLeft10PX field-validation-error" })
            </div>
            <div class="col-md-2 inputGroupContainer ImpLicYearHide ImpLicYear">
                <div class="input-group">
                    <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @placeholder = "* " + Resources.Resource.Year,
                   @class = "form-control textval numericOnly",
                   @maxlength = "4",
                   @ondrop = "return false;",
                   @onpaste = "return false;", @id = "Year"
               } })
                </div>
                @Html.ValidationMessage("", new { @id = "YearErrmsg", @class = "text-danger inlineBlock marginRightLeft10PX field-validation-error" })
            </div>
            <label class="col-md-2 control-label">@Resources.Resource.Importer_Licensetype</label>
            <div class="col-md-4 inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                    @Html.DropDownListFor(m => m.LicenseType,Model.LicenceTypeList, new
               {
                   @id = "ImpLicType",
                   @class = "selectpicker form-control   "
               })
                </div>
            </div>
        </div>*@

            @*<div class="form-group">
            <label class="col-md-3 control-label">@Resources.Resource.docTypesLabel</label>
            <div class="col-md-7 inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>


                    @Html.DropDownListFor(m => m.DocumentTypeCode, Model.DocumentTypeList, new
               {
                   @id = "ddlDocumentTypes",
                   @class = "form-control select2"
               })
                </div>
            </div>
        </div>*@



            <div class="form-group">
                <label class="col-md-3 control-label">@Resources.Resource.Importer_IssuanceDate</label>
                <div class="col-md-6 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                        @Html.EditorFor(model => model.IssuanceDate, new { htmlAttributes = new { @placeholder = "* " + Resources.Resource.Importer_IssuanceDate, @class = "form-control  mydate textval", @id = "IssuanceDate" } })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-3 control-label">@Resources.Resource.expiryDate</label>
                <div class="col-md-6 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                        @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @placeholder = "* " + Resources.Resource.expiryDate, @class = "form-control  mydate textval", @id = "ExpiryDate" } })
                    </div>
                </div>
            </div>

            @*<div class="form-group">
                <label class="col-md-2 control-label">@Resources.Resource.Importer_IssuanceDate</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                        @Html.EditorFor(model => model.IssuanceDate, new { htmlAttributes = new { @placeholder = "* " + Resources.Resource.Importer_IssuanceDate, @class = "form-control  mydate textval", @id = "IssuanceDate" } })
                    </div>
                </div>
                <label class="col-md-2 control-label">@Resources.Resource.expiryDate</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon maxWidth100"><i class="glyphicon glyphicon-list"></i></span>
                        @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @placeholder = "* " + Resources.Resource.expiryDate, @class = "form-control  mydate textval", @id = "ExpiryDate" } })
                    </div>
                </div>
            </div>*@
            <div class="row">
                <div class="col-lg-12 text-center">

                    @Html.ValidationMessage("", new { @id = "DateErrmsg", @class = "text-danger inlineBlock marginRightLeft10PX field-validation-error" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-3 control-label">&nbsp;</label>
                <div class="col-md-6 inputGroupContainer">
                    <div class="input-group">
                        <div class="file-loading">
                            <input id="fileUploadCtrl" type="file" data-min-file-count="0" data-theme="fas">
                        </div>
                    </div>
                    @Html.ValidationMessage("", new { @id = "NoFileErrmsg", @class = "text-danger inlineBlock marginRightLeft10PX field-validation-error" })
                </div>
            </div>

            @*<div class="form-group">
            <div class="redColor text-center"> @Resources.Resource.uploadFileMSG</div>
            <label class="col-md-3 control-label marginTop15">@Resources.Resource.fileName</label>
            <div class="col-md-7 inputGroupContainer marginTop15">
                <div class="input-group">
                    <span class="input-group-addon">
                        <i class="glyphicon glyphicon-file"></i>
                    </span>
                    <input id="NewFilename" name="NewFilename" placeholder="@Resources.Resource.fileName"
                           class="form-control" value="" type="text">

                    <p id="fileNameError" class="errorMsg">
                        @Resources.Resource.fileNameError
                    </p>

                </div>
            </div>
        </div>*@


            <div class="form-group">
                <label class="col-md-3 control-label ">&nbsp;</label>
                <div class="col-md-6 inputGroupContainer marginTop15">
                    <div class="input-group">
                        @*<input type="submit" class="btn btn-info btn-block col-centered width50Percent" causesvalidation="false" value="@Resources.Resource.UploadDocument_Header" />*@

                        <button type="button" onclick="UploadOrgDocuments()" class="btn btn-info btn-block col-centered width50Percent" causesvalidation="false" id="uploadWindow1">
                            @Resources.Resource.Submit
                        </button>
                    </div>
                </div>
            </div>

        </fieldset>
    </div>
}

<p class="redColor text-center"> @Resources.Resource.uploadedFileListMSG </p>

<table id="Uploadedfileslist" class="table table-responsive table-bordered table-condensed table-striped table-sm table-info ">
    <thead>
        <tr>
            @*<th><input type="checkbox" id="headercheck" /></th>*@
            <th class="text-center">@Resources.Resource.licenceNo</th>
            <th class="text-center">@Resources.Resource.Importer_Licensetype</th>
            @*<th class="text-center">@Resources.Resource.fileName</th>*@
            @*<th class="text-center">@Resources.Resource.docType</th>*@
            @*<th class="text-center">@Resources.Resource.uploadDate</th>*@
            <th class="text-center">@Resources.Resource.Importer_IssuanceDate</th>
            <th class="text-center">@Resources.Resource.Importer_EndDate</th>
            <th class="text-center">@Resources.Resource.Action</th>

        </tr>

    </thead>

    <tbody>
        @if (Model.OrganizationDocuments.Count > 0)
        {
            foreach (var item in Model.OrganizationDocuments)
            {
                <tr class="text-center">
                    @*<td>
                            <input type="checkbox" name="@item.DocumentId" runat="server" class="deleteselctedcheckbox" id=@item.DocumentId />
                        </td>*@
                    <td>
                        @item.LicenseNumber
                    </td>
                    <td>
                        @item.LicenseType
                    </td>
                    @*<td>
                            @item.DocumentName
                        </td>*@

                    @*<td>
                            @item.DocumentTypeCode
                        </td>
                        <td>
                            @item.CreatedDate
                        </td>*@
                    <td>
                        @item.IssuanceDate
                    </td>
                    <td>
                        @item.ExpiryDate
                    </td>
                    <td class="text-center">
                        @*@Html.ActionLink(Resources.Resource.download, "DownloadFile", "BrokerRenewal", new { filename = @item.DocumentId, }, new { @class = "btn btn-primary", @style = "padding:3px" })

                            <input type="button" value=@Resources.Resource.deleteFile onclick="DeleteFilewithDocIdForClearingExam(this)" id="@item.DocumentId" class="mcbutton btn btn-primary" runat="server" style="padding:3px" />*@

                        @Html.ActionLink(Resources.Resource.download, "DownloadFile", "BrokerRenewal", new { filename =HttpUtility.UrlEncode ( WebApplication1.Models.CommonFunctions.CsUploadEncrypt(item.OrganizationRequestDocumentId)),
                       referenceprofile = "OrganizationRequests" }, new { @class = "btn btn-primary" ,@style= "padding: 2px;    font-size: smaller;" })

                        @Html.ActionLink(Resources.Resource.delete, "DeleteOrgDocument", "user",
                       new { OrgReqDocId = WebApplication1.Models.encrypt.Encode(WebApplication1.Models.CommonFunctions.CsUploadEncrypt(item.OrganizationRequestDocumentId)),
                           OrgId = WebApplication1.Models.encrypt.Encode(WebApplication1.Models.CommonFunctions.CsUploadEncrypt(Model.OrgId)),
                           OrgReqId = WebApplication1.Models.encrypt.Encode(WebApplication1.Models.CommonFunctions.CsUploadEncrypt(Model.OrgReqId)),
                           OrgName = WebApplication1.Models.encrypt.Encode(WebApplication1.Models.CommonFunctions.CsUploadEncrypt(Model.OrgName)) }, new { @class = "btn btn-primary", @style = "padding: 2px;    font-size: smaller;" })

                    </td>
                </tr>
            }
        }

    </tbody>
</table>

<div class="row">
    <div class="col-lg-12 text-center">
        @Html.ActionLink(Resources.Resource.Back, "OrganizationsDetail", "User", null, new { @class = "btn btn-primary" })

    </div>
</div>

<div id="modalDiv" class="modal" style="display:none;">
    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close" id="closeError">&times;</span>
            <h6 id="modelHeaderTitle">&nbsp;</h6>
        </div>
        <div class="modal-body">
            <h5 id="modalMessage"></h5>
        </div>
        <div class="modal-footer">
            <input type="button" ID="closeModal" class="btn btn-info" value="@Resources.Resource.Ok" />
        </div>
    </div>
</div>

<input type="hidden" runat="server" id="Tid" />
<input type="hidden" runat="server" id="uid" />
<input type="hidden" runat="server" id="reqid1" />
<input type="hidden" id="fileErrorMsg" name="fileErrorMsg" value="@Resources.Resource.uploadFileError" />
<input type="hidden" id="LicenseErrorMsg" name="LicenseErrorMsg" value="@Resources.Resource.ImporterLicensenumberRequired" />
<input type="hidden" id="NewFilenameErrorMsg" name="NewFilenameErrorMsg" value="Please enter the document name" />
<input type="hidden" id="MandatoryDatefield" name="MandatoryDatefield" value="Both License issuance and Expiry date are madatory" />
<input type="hidden" id="LicenseTypeErrorMsg" name="LicenseTypeErrorMsg" value="Please select a Importer License Type" />
<input type="hidden" id="YearErrorMsg" name="YearErrorMsg" value="Please enter the Year" />
<input type="hidden" id="DifferentYearErrorMsg" name="DifferentYearErrorMsg" value="The License year should be same as issuance year" />

@*<input type="hidden" id="fileErrorHeaderMSG" name="fileErrorHeaderMSG" value="@Resources.Resource.fileName" />*@

<script>
    var UploadDocsUrl = '@System.Configuration.ConfigurationManager.AppSettings["UploadDocs"].ToString()';// 'http://localhost/ETradeAPI/api/Docs/Upload';//
    var EserviceRequestId= '@Model.OrgId';
    document.getElementById("Tid").value='@ViewBag.TokenId';
    document.getElementById("uid").value='@ViewBag.UserId';
    document.getElementById("reqid1").value = '@ViewBag.reqid1';

    $("#fileUploadCtrl").click(function () {
        // var selectedValue = $(this).val();
        $("#NewFilename").val($("#ddlDocumentTypes").find("option:selected").text())

    });

    $(document).ready(function () {
        $('#ExpiryDate').datepicker({
            dateFormat: "dd/mm/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+10"
        });
        $('#IssuanceDate').datepicker({
            dateFormat: "dd/mm/yy",
            changeMonth: true,
            maxDate: '+0',
            minDate: '',
            changeYear: true,
            yearRange: "-60:+10"
        });


    });
</script>